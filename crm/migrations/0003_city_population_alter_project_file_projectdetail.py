# Generated by Django 4.1.5 on 2023-01-14 14:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('crm', '0002_project_created_at_project_file_alter_project_accept_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='city',
            name='population',
            field=models.IntegerField(default=1103781),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='project',
            name='file',
            field=models.URLField(verbose_name='Ссылка на презентацию'),
        ),
        migrations.CreateModel(
            name='ProjectDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='%d-%m-%Y/', verbose_name='Обложка объекта')),
                ('lessor', models.CharField(max_length=255, verbose_name='Контактное лицо')),
                ('lessor_phone', models.PositiveBigIntegerField(verbose_name='Телефон')),
                ('sq_bay', models.IntegerField(verbose_name='Торговая площадь')),
                ('sq_basemant', models.IntegerField(verbose_name='Площадь подвала')),
                ('sq_price', models.PositiveSmallIntegerField(verbose_name='Цена за квадрат')),
                ('len_rent', models.SmallIntegerField(verbose_name='Максимальный срок аренды')),
                ('floor_material', models.CharField(choices=[('1', 'Бетон'), ('2', 'Плитка'), ('3', 'Дерево'), ('4', 'Металл'), ('5', 'Гипсокартон')], default='2', max_length=128, verbose_name='Материал пола')),
                ('floor_level', models.BooleanField(default=True, verbose_name='Все полы в одном уровне')),
                ('floor_var', models.BooleanField(default=True, verbose_name='Одинаковые ли полы в подсобных помещениях и в торговом зале')),
                ('roof_stat', models.BooleanField(default=False, verbose_name='Протечки потолка')),
                ('debarkader', models.BooleanField(default=True, verbose_name='Дебаркадер')),
                ('radius_school', models.BooleanField(default=False, verbose_name='Наличие учреждений являющимися запретом для торговли табака, алкоголя')),
                ('radius_len', models.PositiveSmallIntegerField(verbose_name='Расстояние до учереждения')),
                ('radius_bool', models.BooleanField(default=True, verbose_name='Проходит по законодательству')),
                ('sewer', models.CharField(choices=[('1', 'Центральня'), ('2', 'Септик'), ('3', 'Сололифт'), ('4', 'Отсутствует')], default='1', max_length=128, verbose_name='Канализация')),
                ('water', models.CharField(choices=[('cold', 'Холодная вода'), ('warm', 'Холодная и горячая вода'), ('none', 'Без водоснабжения')], default='warm', max_length=128, verbose_name='Водоснабжение')),
                ('electric', models.PositiveSmallIntegerField(verbose_name='Электроэнергия, кВт')),
                ('electric_up', models.BooleanField(default=True, verbose_name='Возможность повышения кВт')),
                ('heat', models.CharField(choices=[('1', 'Центральное'), ('2', 'Газ'), ('3', 'Печное'), ('4', 'Электрокотел'), ('5', 'Другое')], default='1', max_length=128, verbose_name='Отопление')),
                ('parking_len', models.PositiveSmallIntegerField(verbose_name='Расстояние от парковки до входа')),
                ('parking_material', models.CharField(choices=[('1', 'Центральня'), ('2', 'Септик'), ('3', 'Сололифт'), ('4', 'Отсутствует')], default='3', max_length=128, verbose_name='Покрытие парковки')),
                ('parking_max', models.PositiveSmallIntegerField(verbose_name='Вместимость парковки')),
                ('delay', models.BooleanField(default=True, verbose_name='Отсрочка')),
                ('delay_len', models.CharField(max_length=255, verbose_name='Длительность отсрочки')),
                ('repair', models.CharField(max_length=255, verbose_name='Ремонт или отсрочка')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий сотрудника по объекту(если есть)')),
                ('ads_url', models.URLField(blank=True, verbose_name='Ссылка на обьявление')),
                ('resume', models.TextField(blank=True, verbose_name='Резюме SV(Развития)')),
                ('complite', models.BooleanField(default=False, verbose_name='Документ завершен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.project', verbose_name='Проект')),
            ],
        ),
    ]
